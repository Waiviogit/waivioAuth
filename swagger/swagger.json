{
  "swagger": "2.0",
  "host": "waiviodev.com/",
  "schemes": [
    "https"
  ],
  "info": {
    "version": "0.0.1",
    "title": "Waivio auth service",
    "description": "Documentation for waivio auth service"
  },
  "basePath": "auth/",
  "paths": {
    "/facebook": {
      "post": {
        "tags": [
          "Auth"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "body",
            "description": "facebook access_token",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User data",
            "examples": {
              "data": {
                "user": "user data"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/beaxy": {
      "post": {
        "tags": [
          "Auth"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "params",
            "description": "Auth by beaxy(if authBy - credentials => use {user: , password: } in authData. 2fa=> {token2fa: , code: , user: })",
            "required": false,
            "schema": {
              "$ref": "#/definitions/auth_beaxy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "2fa auth needed",
            "schema": {
              "example": {
                "admin": {
                  "code": 321,
                  "response": "TWO_FA_VERIFICATION_NEEDED",
                  "payload": {
                    "token2fa": "0fce19045e0f460c9943c586f6117fdc"
                  }
                }
              }
            }
          },
          "201": {
            "description": "success (code 200!!!)",
            "headers": {
              "access-token": {
                "type": "string",
                "description": "access-token"
              },
              "expires-in": {
                "type": "number"
              },
              "um_session": {
                "type": "string"
              },
              "um_session_exp": {
                "type": "number"
              }
            },
            "schema": {
              "example": {
                "user": {
                  "_id": "5e4e91b73b3102381e41d037",
                  "objects_follow": [],
                  "users_follow": [],
                  "json_metadata": "{\"profile\":{\"name\":\"investarena\",\"profile_image\":null}}",
                  "wobjects_weight": 0,
                  "count_posts": 0,
                  "last_posts_count": 0,
                  "name": "bxy_",
                  "alias": "investarena",
                  "createdAt": "2020-02-20T14:03:35.632Z",
                  "updatedAt": "2020-02-20T14:46:47.921Z",
                  "__v": 0
                },
                "payload": {
                  "crmToken": "fghfghgfhfhgfhdg",
                  "sessionId": "476b0205-4b75-4696-b584-82c2761efe10",
                  "stompUser": "gfhdgfhdgfhhdgfhdfghdfhfsd",
                  "stompPassword": "sdfdsfdsfdsfdsfsgdfg"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "example": {
                "message": "2fa token not provided"
              }
            }
          }
        }
      }
    },
    "/instagram": {
      "post": {
        "tags": [
          "Auth"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "body",
            "description": "instagram access_token",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User data",
            "examples": {
              "data": {
                "user": "user data"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/google": {
      "post": {
        "tags": [
          "Auth"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "body",
            "description": "google access_token",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User data",
            "examples": {
              "data": {
                "user": "user data"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/validate_auth_token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Send access-token in headers. If token expired and valid, a new access token will respond. Auth headers are: 'access-token, expires-in, waivio-auth",
        "parameters": [
          {
            "name": "access-token",
            "in": "headers",
            "description": "user access_token",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User data with auth headers",
            "examples": {
              "data": {
                "user": "user data"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/guest_operations": {
      "post": {
        "tags": [
          "Operation"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Transport to waivio services guest actions",
        "parameters": [
          {
            "name": "access-token",
            "in": "headers",
            "description": "user access_token",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "body",
            "description": "action type key",
            "type": "string",
            "example": "waivio_guest_follow",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "data of request",
            "type": "string",
            "example": {
              "data": {
                "some_key": "some_value"
              }
            },
            "required": true
          },
          {
            "name": "userName",
            "in": "body",
            "description": "user name",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "any_status": {
            "description": "Any data from services",
            "examples": {
              "data": {
                "user": "user data"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/has_social_account": {
      "get": {
        "tags": [
          "Auth"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Check demo user authorize",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id of social account",
            "type": "string",
            "example": "32545223563474356",
            "required": true
          },
          {
            "name": "provider",
            "in": "query",
            "description": "user provider",
            "type": "string",
            "example": "facebook",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "data": {
                "user": "user data"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "auth_beaxy": {
      "type": "object",
      "properties": {
        "authBy": {
          "type": "string",
          "enum": ["2fa", "credentials"]
        },
        "authData": {
          "type": "object",
          "properties": {
            "token2fa": {
              "type": "string"
            },
            "code": {
              "type": "number"
            },
            "user": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
